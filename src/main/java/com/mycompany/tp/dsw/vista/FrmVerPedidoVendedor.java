/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tp.dsw.vista;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import java.awt.Component;

import com.mycompany.tp.dsw.controller.PedidoController;
import com.mycompany.tp.dsw.exception.PedidoNoEncontradoException;
import com.mycompany.tp.dsw.model.Cliente;
import com.mycompany.tp.dsw.model.Estado;
import com.mycompany.tp.dsw.model.Pedido;
import com.mycompany.tp.dsw.service.MensajeAlerta;
import com.mycompany.tp.dsw.vista.util.CheckBoxEditor;
import com.mycompany.tp.dsw.vista.util.CheckBoxRenderer;
import com.mycompany.tp.dsw.vista.util.HeaderFormatter;
import java.util.stream.IntStream;

/**
 *
 * @author Usuario
 */
public class FrmVerPedidoVendedor extends javax.swing.JFrame {

    private String idVendedor;
    PedidoController pedidoController;

    public FrmVerPedidoVendedor() {
        initComponents();
    }

    public FrmVerPedidoVendedor(String idVendedor) {
        initComponents();

        pedidoController = new PedidoController();
        this.idVendedor = idVendedor;
        this.setLocationRelativeTo(null);
        setearTituloTabla();
        initDatos();
    }

    public void initDatos() {

        List<Pedido> pedidos = new ArrayList<>();
        pedidos = pedidoController.obtenerPedidoPorIdVendedor(idVendedor);
        mostrarTabla(pedidos);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnAceptarPedidos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPedidos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setPreferredSize(new java.awt.Dimension(518, 260));

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnAceptarPedidos.setText("Aceptar Pedidos");
        btnAceptarPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarPedidosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAceptarPedidos)
                                .addContainerGap()));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 24,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnAceptarPedidos))
                                .addGap(0, 6, Short.MAX_VALUE)));

        jPanel2.setPreferredSize(new java.awt.Dimension(518, 260));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 839, Short.MAX_VALUE));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 30, Short.MAX_VALUE));

        jPanel1.setLayout(new java.awt.BorderLayout());

        tbPedidos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {

                }));
        tbPedidos.setRowHeight(25);
        jScrollPane1.setViewportView(tbPedidos);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel4Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 842,
                                                Short.MAX_VALUE)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 842,
                                                Short.MAX_VALUE))
                                .addContainerGap())
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addContainerGap(7, Short.MAX_VALUE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 839,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(8, Short.MAX_VALUE))));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap(34, Short.MAX_VALUE)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 356, Short.MAX_VALUE))));

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarPedidosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnAceptarPedidosActionPerformed
        // Obtener el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) tbPedidos.getModel();

        // Filtrar filas con checkbox seleccionado
        IntStream.range(0, model.getRowCount())
                .filter(i -> model.getValueAt(i, 6) instanceof Boolean && (Boolean) model.getValueAt(i, 6))
                .mapToObj(i -> model.getValueAt(i, 0))
                .map(pedidoId -> pedidoController.obtenerPedidoPorId(pedidoId.toString()))
                .forEach(pedido -> { // Actualizar el estado del pedido
                    pedido.setEstado(Estado.ACEPTADO);
                    try {
                        pedidoController.actualizarPedido(pedido);
                    } catch (PedidoNoEncontradoException e) {
                        MensajeAlerta.mostrarError(e.getMessage(), "Error Aceptar Pedidos");
                    }
                });

        // Actualizar la tabla despu√©s de los cambios
        mostrarTabla(pedidoController.obtenerPedidoPorIdVendedor(idVendedor));
    }// GEN-LAST:event_btnAceptarPedidosActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }// GEN-LAST:event_btnCancelarActionPerformed

    public void setearTituloTabla() {
        DefaultTableModel model = new DefaultTableModel();
        String[] titulo = { "PEDIDO", "CLIENTE", "DIRECCION", "EMAIL", "ESTADO", "PRECIO", "ACEPTAR" };
        model.setColumnIdentifiers(titulo);
        tbPedidos.setModel(model);

        // Personalizar el encabezado
        JTableHeader header = tbPedidos.getTableHeader();
        header.setDefaultRenderer(new HeaderFormatter());
    }

    public void mostrarTabla(List<Pedido> pedidos) {
        // Asegurarse de que la tabla tenga el modelo configurado
        if (tbPedidos.getModel() == null || !(tbPedidos.getModel() instanceof DefaultTableModel)) {
            setearTituloTabla(); // Configura el encabezado y el modelo si no est√° configurado
        }

        DefaultTableModel model = (DefaultTableModel) tbPedidos.getModel(); // Recupera el modelo

        // Limpiar el modelo
        model.setRowCount(0);

        if (pedidos != null && !pedidos.isEmpty()) {
            for (Pedido pedido : pedidos) {
                Cliente cliente = pedido.getCliente();
                Estado estado = pedido.getEstado();

                Object[] fila = new Object[7];
                fila[0] = pedido.getId();
                fila[1] = cliente.getNombre();
                fila[2] = cliente.getDireccion();
                fila[3] = cliente.getEmail();
                fila[4] = estado;
                fila[5] = pedido.totalSinRecargo();
                fila[6] = estado.equals(Estado.RECIBIDO) ? Boolean.FALSE : "Aceptado";

                model.addRow(fila);
            }
        }

        tbPedidos.setModel(model);

        tbPedidos.getColumnModel().getColumn(6).setCellRenderer(new CheckBoxRenderer());
        tbPedidos.getColumnModel().getColumn(6).setCellEditor(new CheckBoxEditor());

        // Ajustar el ancho de las columnas
        ajustarAnchoColumnas(tbPedidos);
    }

    private void ajustarAnchoColumnas(JTable tabla) {
        for (int columna = 0; columna < tabla.getColumnCount(); columna++) {
            TableColumn tableColumn = tabla.getColumnModel().getColumn(columna);
            int anchoPreferido = 0;

            // Calcular ancho basado en el encabezado
            Component headerRenderer = tabla.getTableHeader().getDefaultRenderer()
                    .getTableCellRendererComponent(tabla, tableColumn.getHeaderValue(), false, false, -1, columna);
            anchoPreferido = Math.max(anchoPreferido, headerRenderer.getPreferredSize().width);

            // Calcular ancho basado en el contenido de las celdas
            for (int fila = 0; fila < tabla.getRowCount(); fila++) {
                Component cellRenderer = tabla.getCellRenderer(fila, columna)
                        .getTableCellRendererComponent(tabla, tabla.getValueAt(fila, columna), false, false, fila,
                                columna);
                anchoPreferido = Math.max(anchoPreferido, cellRenderer.getPreferredSize().width);
            }

            // Establecer el ancho preferido en la columna
            tableColumn.setPreferredWidth(anchoPreferido); // A√±adir un margen adicional
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVerPedidoVendedor.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVerPedidoVendedor.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVerPedidoVendedor.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVerPedidoVendedor.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVerPedidoVendedor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarPedidos;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbPedidos;
    // End of variables declaration//GEN-END:variables
}
