/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.tp.dsw.vista;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import com.mycompany.tp.dsw.controller.ClienteController;
import com.mycompany.tp.dsw.dto.ClienteDto;
import com.mycompany.tp.dsw.exception.NoValidarException;
import com.mycompany.tp.dsw.service.MensajeAlerta;
import com.mycompany.tp.dsw.vista.cliente.FrmRealizarPedido;
import com.mycompany.tp.dsw.vista.cliente.FrmVerPedidos;
import com.mycompany.tp.dsw.vista.util.HeaderFormatter;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Usuario
 */
public class JplCliente extends javax.swing.JPanel {

    private ClienteController clienteController;

    public JplCliente() {
        initComponents();
        clienteController = new ClienteController();
        initTable();
        poputTable();
    }

    public void initTable() {
        List<ClienteDto> clientesDto = clienteController.obtenerTodosLosClientes();
        mostrarTabla(clientesDto);
    }

    public void poputTable() {
        jPopupMenu.add(jmiCargarDatos);
        jPopupMenu.add(jmiVerDetallesCliente);
        jPopupMenu.add(jmiVerPedidos);
        jPopupMenu.add(jmiRealizarPedido);
        tbClientesDatos.setComponentPopupMenu(jPopupMenu);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        txtNombreBuscar2 = new javax.swing.JTextField();
        jPopupMenu = new javax.swing.JPopupMenu();
        jmiCargarDatos = new javax.swing.JMenuItem();
        jmiRealizarPedido = new javax.swing.JMenuItem();
        jmiVerDetallesCliente = new javax.swing.JMenuItem();
        jmiVerPedidos = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane = new javax.swing.JTabbedPane();
        jPanelAgregar = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnLimpiarAgregar = new javax.swing.JButton();
        txtCuitAgregar = new javax.swing.JTextField();
        txtEmailAgregar = new javax.swing.JTextField();
        txtLatitudAgregar = new javax.swing.JTextField();
        txtLongitudAgregar = new javax.swing.JTextField();
        txtDireccionAgregar = new javax.swing.JTextField();
        txtNombreAgregar = new javax.swing.JTextField();
        jPanelModificar = new javax.swing.JPanel();
        btnModificar = new javax.swing.JButton();
        txtIDModificar = new javax.swing.JTextField();
        txtNombreModificar = new javax.swing.JTextField();
        txtCuitModificar = new javax.swing.JTextField();
        txtDireccionModificar = new javax.swing.JTextField();
        txtEmailModificar = new javax.swing.JTextField();
        txtLatitudModificar = new javax.swing.JTextField();
        txtLongitudModificar = new javax.swing.JTextField();
        btnLimpiarModificar = new javax.swing.JButton();
        jPanelEliminar = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        txtIDEliminar = new javax.swing.JTextField();
        txtNombreEliminar = new javax.swing.JTextField();
        txtCuitEliminar = new javax.swing.JTextField();
        txtDireccionEliminar = new javax.swing.JTextField();
        txtEmailEliminar = new javax.swing.JTextField();
        txtLatitudEliminar = new javax.swing.JTextField();
        txtLongitudEliminar = new javax.swing.JTextField();
        btnLimpiarEliminar = new javax.swing.JButton();
        jPanelBuscar = new javax.swing.JPanel();
        btnLimpiarBuscar = new javax.swing.JButton();
        txtNombreBuscar = new javax.swing.JTextField();
        txtIDBuscar = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbClientesDatos = new javax.swing.JTable();

        txtNombreBuscar2.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreBuscar2.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreBuscar2.setFocusCycleRoot(true);
        txtNombreBuscar2.setName(""); // NOI18N

        jmiCargarDatos.setText("Cargar Datos");
        jmiCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCargarDatosActionPerformed(evt);
            }
        });

        jmiRealizarPedido.setText("Realizar Pedido");
        jmiRealizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiRealizarPedidoActionPerformed(evt);
            }
        });

        jmiVerDetallesCliente.setText("Ver Detalles Cliente");

        jmiVerPedidos.setText("Ver Pedidos");
        jmiVerPedidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiVerPedidosActionPerformed(evt);
            }
        });

        setPreferredSize(new java.awt.Dimension(960, 420));
        setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(
                javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "CLIENTES",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelAgregar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanelAgregar.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, -1, -1));

        btnLimpiarAgregar.setText("Limpiar");
        btnLimpiarAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarAgregarActionPerformed(evt);
            }
        });
        jPanelAgregar.add(btnLimpiarAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        txtCuitAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtCuitAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuit"));
        txtCuitAgregar.setFocusCycleRoot(true);
        txtCuitAgregar.setName(""); // NOI18N

        jPanelAgregar.add(txtCuitAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 130, -1));

        txtEmailAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtEmailAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Email"));
        txtEmailAgregar.setFocusCycleRoot(true);
        txtEmailAgregar.setName(""); // NOI18N

        jPanelAgregar.add(txtEmailAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 290, -1));

        txtLatitudAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtLatitudAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Latitud"));
        txtLatitudAgregar.setFocusCycleRoot(true);
        txtLatitudAgregar.setName(""); // NOI18N

        jPanelAgregar.add(txtLatitudAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 130, -1));

        txtLongitudAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtLongitudAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Longitud"));
        txtLongitudAgregar.setFocusCycleRoot(true);
        txtLongitudAgregar.setName(""); // NOI18N

        jPanelAgregar.add(txtLongitudAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 130, -1));

        txtDireccionAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtDireccionAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Direcci√≥n"));
        txtDireccionAgregar.setFocusCycleRoot(true);
        txtDireccionAgregar.setName(""); // NOI18N

        jPanelAgregar.add(txtDireccionAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 290, -1));

        txtNombreAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreAgregar.setFocusCycleRoot(true);
        txtNombreAgregar.setName(""); // NOI18N

        jPanelAgregar.add(txtNombreAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 130, -1));

        jTabbedPane.addTab("Agregar", jPanelAgregar);

        jPanelModificar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanelModificarPropertyChange(evt);
            }
        });
        jPanelModificar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanelModificar.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, -1, -1));

        txtIDModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtIDModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));
        txtIDModificar.setFocusCycleRoot(true);
        txtIDModificar.setName(""); // NOI18N

        jPanelModificar.add(txtIDModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 130, -1));

        txtNombreModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreModificar.setFocusCycleRoot(true);
        txtNombreModificar.setName(""); // NOI18N

        jPanelModificar.add(txtNombreModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 130, -1));

        txtCuitModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtCuitModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuit"));
        txtCuitModificar.setFocusCycleRoot(true);
        txtCuitModificar.setName(""); // NOI18N

        jPanelModificar.add(txtCuitModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 130, -1));

        txtDireccionModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtDireccionModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Direcci√≥n"));
        txtDireccionModificar.setFocusCycleRoot(true);
        txtDireccionModificar.setName(""); // NOI18N

        jPanelModificar.add(txtDireccionModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 290, -1));

        txtEmailModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtEmailModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Email"));
        txtEmailModificar.setFocusCycleRoot(true);
        txtEmailModificar.setName(""); // NOI18N

        jPanelModificar.add(txtEmailModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 290, -1));

        txtLatitudModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtLatitudModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Latitud"));
        txtLatitudModificar.setFocusCycleRoot(true);
        txtLatitudModificar.setName(""); // NOI18N

        jPanelModificar.add(txtLatitudModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 130, -1));

        txtLongitudModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtLongitudModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Longitud"));
        txtLongitudModificar.setFocusCycleRoot(true);
        txtLongitudModificar.setName(""); // NOI18N

        jPanelModificar.add(txtLongitudModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 130, -1));

        btnLimpiarModificar.setText("Limpiar");
        btnLimpiarModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarModificarActionPerformed(evt);
            }
        });
        jPanelModificar.add(btnLimpiarModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        jTabbedPane.addTab("Modificar", jPanelModificar);

        jPanelEliminar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanelEliminarPropertyChange(evt);
            }
        });
        jPanelEliminar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanelEliminar.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 310, -1, -1));

        txtIDEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtIDEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));
        txtIDEliminar.setFocusCycleRoot(true);
        txtIDEliminar.setName(""); // NOI18N

        jPanelEliminar.add(txtIDEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 130, -1));

        txtNombreEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreEliminar.setFocusCycleRoot(true);
        txtNombreEliminar.setName(""); // NOI18N

        jPanelEliminar.add(txtNombreEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 130, -1));

        txtCuitEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtCuitEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Cuit"));
        txtCuitEliminar.setFocusCycleRoot(true);
        txtCuitEliminar.setName(""); // NOI18N

        jPanelEliminar.add(txtCuitEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 80, 130, -1));

        txtDireccionEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtDireccionEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Direcci√≥n"));
        txtDireccionEliminar.setFocusCycleRoot(true);
        txtDireccionEliminar.setName(""); // NOI18N

        jPanelEliminar.add(txtDireccionEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 290, -1));

        txtEmailEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtEmailEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Email"));
        txtEmailEliminar.setFocusCycleRoot(true);
        txtEmailEliminar.setName(""); // NOI18N

        jPanelEliminar.add(txtEmailEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 290, -1));

        txtLatitudEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtLatitudEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Latitud"));
        txtLatitudEliminar.setFocusCycleRoot(true);
        txtLatitudEliminar.setName(""); // NOI18N

        jPanelEliminar.add(txtLatitudEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 130, -1));

        txtLongitudEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtLongitudEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Longitud"));
        txtLongitudEliminar.setFocusCycleRoot(true);
        txtLongitudEliminar.setName(""); // NOI18N

        jPanelEliminar.add(txtLongitudEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 130, -1));

        btnLimpiarEliminar.setText("Limpiar");
        btnLimpiarEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarEliminarActionPerformed(evt);
            }
        });
        jPanelEliminar.add(btnLimpiarEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        jTabbedPane.addTab("Eliminar", jPanelEliminar);

        jPanelBuscar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnLimpiarBuscar.setText("Limpiar");
        btnLimpiarBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarBuscarActionPerformed(evt);
            }
        });
        jPanelBuscar.add(btnLimpiarBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        txtNombreBuscar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreBuscar.setFocusCycleRoot(true);
        txtNombreBuscar.setName(""); // NOI18N

        txtNombreBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreBuscarKeyReleased(evt);
            }
        });
        jPanelBuscar.add(txtNombreBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 220, -1));

        txtIDBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));
        txtIDBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIDBuscarKeyReleased(evt);
            }
        });
        jPanelBuscar.add(txtIDBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 220, -1));

        jTabbedPane.addTab("Buscar", jPanelBuscar);

        jPanel2.add(jTabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 330, 390));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        tbClientesDatos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        {},
                        {},
                        {},
                        {}
                },
                new String[] {

                }));
        tbClientesDatos.setRowHeight(25);
        tbClientesDatos.setShowGrid(true);
        tbClientesDatos.getTableHeader().setResizingAllowed(false);
        tbClientesDatos.getTableHeader().setReorderingAllowed(false);

        jScrollPane1.setViewportView(tbClientesDatos);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 555,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(9, Short.MAX_VALUE)));
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE)
                                .addContainerGap()));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 40, 570, 370));

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jmiVerPedidosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jmiVerPedidosActionPerformed
        int selectedRow = tbClientesDatos.getSelectedRow();

        if (selectedRow != -1) {
            String idCliente = tbClientesDatos.getValueAt(selectedRow, 0).toString();
            FrmVerPedidos verPedidosForm = new FrmVerPedidos(idCliente);
            verPedidosForm.setVisible(true);
        } else {
            MensajeAlerta.mostrarInformacion("Seleccione un cliente para ver sus pedidos", "Ver Pedido Cliente");
        }
    }// GEN-LAST:event_jmiVerPedidosActionPerformed

    private void jmiCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jmiCargarDatosActionPerformed
        int selectedRow = tbClientesDatos.getSelectedRow();
        String id = tbClientesDatos.getValueAt(selectedRow, 0).toString();

        try {
            ClienteDto selectedCliente = clienteController.buscarClientePorId(id);
            if (selectedCliente != null) {
                if (jTabbedPane.getSelectedIndex() == 1) { // Modificar
                    txtIDModificar.setText(selectedCliente.getId().toString());
                    txtNombreModificar.setText(selectedCliente.getNombre());
                    txtCuitModificar.setText(selectedCliente.getCuit());
                    txtDireccionModificar.setText(selectedCliente.getDireccion());
                    txtEmailModificar.setText(selectedCliente.getEmail());
                    txtLatitudModificar.setText(selectedCliente.getCoordenadaDto().getLatitud().toString());
                    txtLongitudModificar.setText(selectedCliente.getCoordenadaDto().getLongitud().toString());
                } else if (jTabbedPane.getSelectedIndex() == 2) { // Eliminar
                    txtIDEliminar.setText(selectedCliente.getId().toString());
                    txtNombreEliminar.setText(selectedCliente.getNombre());
                    txtCuitEliminar.setText(selectedCliente.getCuit());
                    txtDireccionEliminar.setText(selectedCliente.getDireccion());
                    txtEmailEliminar.setText(selectedCliente.getEmail());
                    txtLatitudEliminar.setText(selectedCliente.getCoordenadaDto().getLatitud().toString());
                    txtLongitudEliminar.setText(selectedCliente.getCoordenadaDto().getLongitud().toString());
                } else {
                    MensajeAlerta.mostrarError("Solamente se puede cargar datos en 'Modificar' o 'Eliminar'.",
                            "Error al cargar datos");
                }
            }
        } catch (NoValidarException e) {
            MensajeAlerta.mostrarError(e.getMessage(), "Error en cargar datos");
        }

    }// GEN-LAST:event_jmiCargarDatosActionPerformed

    private void jmiRealizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jmiRealizarPedidoActionPerformed
        int selectedRow = tbClientesDatos.getSelectedRow();

        if (selectedRow != -1) {
            String idCliente = tbClientesDatos.getValueAt(selectedRow, 0).toString();
            FrmRealizarPedido realizarPedidoFrom = new FrmRealizarPedido(idCliente);
            realizarPedidoFrom.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Seleccione un cliente");
        }

    }// GEN-LAST:event_jmiRealizarPedidoActionPerformed

    private void txtIDBuscarKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtIDBuscarKeyReleased
        String idText = txtIDBuscar.getText();
        List<ClienteDto> clientesDto = new ArrayList<>();

        if (!idText.isEmpty()) {

            try {
                ClienteDto clienteDto = clienteController.buscarClientePorId(idText);
                clientesDto.add(clienteDto);
                txtNombreBuscar.setEnabled(false);
            } catch (NoValidarException e) {
                MensajeAlerta.mostrarError(e.getMessage(), "Error en buscar por ID");
            }

        } else {
            clientesDto = clienteController.obtenerTodosLosClientes();
            txtNombreBuscar.setEnabled(true);
        }

        if (clientesDto == null) {
            mostrarTabla(new ArrayList<>());
        } else {
            mostrarTabla(clientesDto);
        }

    }// GEN-LAST:event_txtIDBuscarKeyReleased

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGuardarActionPerformed
        String nombre = txtNombreAgregar.getText();
        String cuit = txtCuitAgregar.getText();
        String direccion = txtDireccionAgregar.getText();
        String email = txtEmailAgregar.getText();
        String latitud = txtLatitudAgregar.getText();
        String longitud = txtLongitudAgregar.getText();

        try {
            ClienteDto clienteDto = clienteController.crearClienteDto(null, nombre, cuit, direccion, email, latitud,
                    longitud);
            clienteController.guardarCliente(clienteDto);
            List<ClienteDto> clientesDto = clienteController.obtenerTodosLosClientes();
            MensajeAlerta.mostrarInformacion("Cliente creado exitosamente", "Agregar Cliente");
            mostrarTabla(clientesDto);

            btnLimpiarAgregarActionPerformed(evt);
        } catch (NoValidarException e) {
            MensajeAlerta.mostrarError(e.getMessage(), "Error en Agregar");
        }

    }// GEN-LAST:event_btnGuardarActionPerformed

    private void btnLimpiarAgregarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarAgregarActionPerformed
        txtNombreAgregar.setText("");
        txtCuitAgregar.setText("");
        txtDireccionAgregar.setText("");
        txtEmailAgregar.setText("");
        txtLatitudAgregar.setText("");
        txtLongitudAgregar.setText("");
    }// GEN-LAST:event_btnLimpiarAgregarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnModificarActionPerformed
        String id = txtIDModificar.getText();
        String nombre = txtNombreModificar.getText();
        String cuit = txtCuitModificar.getText();
        String direccion = txtDireccionModificar.getText();
        String email = txtEmailModificar.getText();
        String latitud = txtLatitudModificar.getText();
        String longitud = txtLongitudModificar.getText();

        Integer confirmacion = MensajeAlerta.mostrarConfirmacion(
                "¬øEst√° seguro de que desea modificar el cliente con ID: " + id + "?", "Confirmar modificaci√≥n", this);

        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                ClienteDto clienteDto = clienteController.crearClienteDto(id, nombre, cuit, direccion, email, latitud,
                        longitud);
                clienteController.modificarCliente(clienteDto);

                MensajeAlerta.mostrarInformacion("Vendedor modificado exitosamente", "Modificar Cliente");
                List<ClienteDto> clientesDto = clienteController.obtenerTodosLosClientes();
                mostrarTabla(clientesDto);
                btnLimpiarModificarActionPerformed(evt);
            } catch (NoValidarException e) {
                MensajeAlerta.mostrarError(e.getMessage(), "Error en Modificar");
            }
        }
    }// GEN-LAST:event_btnModificarActionPerformed

    private void btnLimpiarModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarModificarActionPerformed
        txtIDModificar.setText("");
        txtNombreModificar.setText("");
        txtCuitModificar.setText("");
        txtDireccionModificar.setText("");
        txtEmailModificar.setText("");
        txtLatitudModificar.setText("");
        txtLongitudModificar.setText("");
    }// GEN-LAST:event_btnLimpiarModificarActionPerformed

    private void jPanelModificarPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_jPanelModificarPropertyChange
        txtIDModificar.setEnabled(false);
    }// GEN-LAST:event_jPanelModificarPropertyChange

    private void btnLimpiarEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarEliminarActionPerformed
        txtIDEliminar.setText("");
        txtNombreEliminar.setText("");
        txtCuitEliminar.setText("");
        txtDireccionEliminar.setText("");
        txtEmailEliminar.setText("");
        txtLatitudEliminar.setText("");
        txtLongitudEliminar.setText("");
    }// GEN-LAST:event_btnLimpiarEliminarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnEliminarActionPerformed
        String idText = txtIDEliminar.getText();

        Integer confirmacion = MensajeAlerta.mostrarConfirmacion(
                "¬øEst√° seguro de que desea eliminar el cliente con ID: " + idText + "?", "Confirmar eliminaci√≥n", this);

        if (confirmacion == JOptionPane.YES_OPTION) {
            try {
                clienteController.eliminarCliente(idText);
                MensajeAlerta.mostrarInformacion("Cliente Eliminado exitosamente", "Eliminar Mensaje");
                List<ClienteDto> clientesDto = clienteController.obtenerTodosLosClientes();
                mostrarTabla(clientesDto);
                btnLimpiarEliminarActionPerformed(evt);
            } catch (NoValidarException e) {
                MensajeAlerta.mostrarError(e.getMessage(), "Error en Eliminar");
            }
        }
    }// GEN-LAST:event_btnEliminarActionPerformed

    private void jPanelEliminarPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_jPanelEliminarPropertyChange
        txtNombreEliminar.setEnabled(false);
        txtDireccionEliminar.setEnabled(false);
        txtLatitudEliminar.setEnabled(false);
        txtLongitudEliminar.setEnabled(false);
    }// GEN-LAST:event_jPanelEliminarPropertyChange

    private void btnLimpiarBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarBuscarActionPerformed
        txtNombreBuscar.setText("");
        txtIDBuscar.setText("");
    }// GEN-LAST:event_btnLimpiarBuscarActionPerformed

    private void txtNombreBuscarKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtNombreBuscarKeyReleased
        String nombre = txtNombreBuscar.getText();
        List<ClienteDto> clientes = new ArrayList<>();
        if (nombre.isEmpty()) {
            clientes = clienteController.obtenerTodosLosClientes();
        } else {
            clientes = clienteController.buscarClientesPorNombre(nombre);
        }

        if (clientes == null) {
            mostrarTabla(new ArrayList<>());
        } else {
            mostrarTabla(clientes);
        }

    }// GEN-LAST:event_txtNombreBuscarKeyReleased

    public void mostrarTabla(List<ClienteDto> clientesDto) {
        DefaultTableModel model = new DefaultTableModel();
        String[] titulo = { "ID", "NOMBRE", "DIRECCION", "CUIT", "EMAIL" };
        model.setColumnIdentifiers(titulo); // Establece los t√≠tulos de las columnas

        if (clientesDto.isEmpty() || clientesDto.get(0) == null) {
            // Tabla vac√≠a
            tbClientesDatos.setModel(model);
        } else {
            for (ClienteDto clienteDto : clientesDto) {
                Object[] fila = new Object[5];
                fila[0] = clienteDto.getId();
                fila[1] = clienteDto.getNombre();
                fila[2] = clienteDto.getDireccion();
                fila[3] = clienteDto.getCuit();
                fila[4] = clienteDto.getEmail();

                model.addRow(fila); // A√±ade la fila al modelo
            }
        }

        tbClientesDatos.setModel(model); // Establece el modelo a la tabla

        // Personalizar el encabezado
        JTableHeader header = tbClientesDatos.getTableHeader();
        header.setDefaultRenderer(new HeaderFormatter());
        ajustarAnchoColumnas(tbClientesDatos);
    }

    private void ajustarAnchoColumnas(JTable tabla) {
        // Itera sobre cada columna
        for (int columna = 0; columna < tabla.getColumnCount(); columna++) {
            TableColumn tableColumn = tabla.getColumnModel().getColumn(columna);
            int anchoPreferido = tabla.getTableHeader().getDefaultRenderer()
                    .getTableCellRendererComponent(tabla, tableColumn.getHeaderValue(), false, false, -1, columna)
                    .getPreferredSize().width;

            tableColumn.setPreferredWidth(anchoPreferido);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiarAgregar;
    private javax.swing.JButton btnLimpiarBuscar;
    private javax.swing.JButton btnLimpiarEliminar;
    private javax.swing.JButton btnLimpiarModificar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelAgregar;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelEliminar;
    private javax.swing.JPanel jPanelModificar;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JMenuItem jmiCargarDatos;
    private javax.swing.JMenuItem jmiRealizarPedido;
    private javax.swing.JMenuItem jmiVerDetallesCliente;
    private javax.swing.JMenuItem jmiVerPedidos;
    private javax.swing.JTable tbClientesDatos;
    private javax.swing.JTextField txtCuitAgregar;
    private javax.swing.JTextField txtCuitEliminar;
    private javax.swing.JTextField txtCuitModificar;
    private javax.swing.JTextField txtDireccionAgregar;
    private javax.swing.JTextField txtDireccionEliminar;
    private javax.swing.JTextField txtDireccionModificar;
    private javax.swing.JTextField txtEmailAgregar;
    private javax.swing.JTextField txtEmailEliminar;
    private javax.swing.JTextField txtEmailModificar;
    private javax.swing.JTextField txtIDBuscar;
    private javax.swing.JTextField txtIDEliminar;
    private javax.swing.JTextField txtIDModificar;
    private javax.swing.JTextField txtLatitudAgregar;
    private javax.swing.JTextField txtLatitudEliminar;
    private javax.swing.JTextField txtLatitudModificar;
    private javax.swing.JTextField txtLongitudAgregar;
    private javax.swing.JTextField txtLongitudEliminar;
    private javax.swing.JTextField txtLongitudModificar;
    private javax.swing.JTextField txtNombreAgregar;
    private javax.swing.JTextField txtNombreBuscar;
    private javax.swing.JTextField txtNombreBuscar2;
    private javax.swing.JTextField txtNombreEliminar;
    private javax.swing.JTextField txtNombreModificar;
    // End of variables declaration//GEN-END:variables
}
