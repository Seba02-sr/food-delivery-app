/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.tp.dsw.vista;

import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.swing.border.TitledBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import javax.swing.text.SimpleAttributeSet;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;

import com.mycompany.tp.dsw.controller.ItemMenuController;
import com.mycompany.tp.dsw.dto.BebidaDto;
import com.mycompany.tp.dsw.dto.PlatoDto;
import com.mycompany.tp.dsw.dto.VendedorDto;
import com.mycompany.tp.dsw.exception.CategoriaNoEncontradaException;
import com.mycompany.tp.dsw.model.Bebida;
import com.mycompany.tp.dsw.model.ItemMenu;
import com.mycompany.tp.dsw.model.Plato;
import com.mycompany.tp.dsw.model.Vendedor;
import com.mycompany.tp.dsw.service.MensajeAlerta;
import com.mycompany.tp.dsw.vista.util.HeaderFormatter;

import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.table.JTableHeader;

/**
 *
 * @author Usuario
 */
public class JplItemMenu extends javax.swing.JPanel {

    private final FrmApp parentFrame;
    private VendedorDto vendedorDto;
    private String tipoCategoria;
    private ItemMenuController itemMenuController;

    public JplItemMenu(FrmApp parentFrame) {
        initComponents();
        this.parentFrame = parentFrame;
        tbtnPlatos.setSelected(true);
        itemMenuController = new ItemMenuController();

    }

    public void setTitulo(VendedorDto vendedorDto) {
        this.vendedorDto = vendedorDto;

        // Obtener el documento de estilo del JTextPane
        StyledDocument doc = txtpTitulo.getStyledDocument();

        // Crear un conjunto de atributos
        SimpleAttributeSet attrs = new SimpleAttributeSet();

        // Configurar el texto en negrita
        StyleConstants.setBold(attrs, true);

        // Configurar el tamaño de la fuente (por ejemplo, 18 puntos)
        StyleConstants.setFontSize(attrs, 18);

        // Configurar el tipo de fuente (opcional, si deseas una fuente específica)
        StyleConstants.setFontFamily(attrs, "Arial");

        // Configurar el color del texto (opcional)
        StyleConstants.setForeground(attrs, Color.BLACK);

        // Centrar el texto
        StyleConstants.setAlignment(attrs, StyleConstants.ALIGN_CENTER);

        // Aplicar los atributos al texto
        doc.setParagraphAttributes(0, doc.getLength(), attrs, false);

        // Insertar el texto con formato
        try {
            doc.remove(0, doc.getLength()); // Limpiar el texto actual
            doc.insertString(doc.getLength(), vendedorDto.getNombre() + " (" + vendedorDto.getDireccion() + ")", attrs);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }

        // Ejecutar la acción asociada a tbtnPlatos
        tbtnPlatosActionPerformed(
                new java.awt.event.ActionEvent(tbtnPlatos, java.awt.event.ActionEvent.ACTION_PERFORMED, null));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngPlatosBebidas = new javax.swing.ButtonGroup();
        buttonGroupAptoCeliaco = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPaneCRUD = new javax.swing.JTabbedPane();
        jPanelAgregar = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        txtNombreAgregar = new javax.swing.JTextField();
        txtPrecioAgregar = new javax.swing.JTextField();
        btnLimpiarAgregar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        txtPeVoAgregar = new javax.swing.JTextField();
        txtCaTmAgregar = new javax.swing.JTextField();
        jRadioButtonNO = new javax.swing.JRadioButton();
        jRadioButtonSI = new javax.swing.JRadioButton();
        jLabelAcGa = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSpinnerGraduacionAlcoholicaAgregar = new javax.swing.JSpinner();
        jComboBoxCategoria = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaAgregar = new javax.swing.JTextArea();
        jPanelModificar = new javax.swing.JPanel();
        btnModificar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        txtNombreModificar = new javax.swing.JTextField();
        txtPrecioModificar = new javax.swing.JTextField();
        txtIDModificar = new javax.swing.JTextField();
        btnLimpiarModificar = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        txtPeVoModificar = new javax.swing.JTextField();
        txtCaTmModificar = new javax.swing.JTextField();
        jRadioButtonNOModificar = new javax.swing.JRadioButton();
        jRadioButtonSIModificar = new javax.swing.JRadioButton();
        jLabelAcGaModificar = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSpinnerGraduacionAlcoholicaModificar = new javax.swing.JSpinner();
        jComboBoxCategoriaModificar = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaModificar = new javax.swing.JTextArea();
        jPanelEliminar = new javax.swing.JPanel();
        btnEliminar = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        txtNombreEliminar = new javax.swing.JTextField();
        txtPrecioEliminar = new javax.swing.JTextField();
        txtIDEliminar = new javax.swing.JTextField();
        btnLimpiarEliminar = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        txtPeVoEliminar = new javax.swing.JTextField();
        txtCaTmEliminar = new javax.swing.JTextField();
        jRadioButtonNOEliminar = new javax.swing.JRadioButton();
        jRadioButtonSIEliminar = new javax.swing.JRadioButton();
        jLabelAcGaEliminar = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSpinnerGraduacionAlcoholicaEliminar = new javax.swing.JSpinner();
        jComboBoxCategoriaEliminar = new javax.swing.JComboBox<>();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaEliminar = new javax.swing.JTextArea();
        jPanelBuscar = new javax.swing.JPanel();
        btnLimpiarBuscar = new javax.swing.JButton();
        txtIdBuscar = new javax.swing.JTextField();
        txtNombreBuscar = new javax.swing.JTextField();
        jPanelTable = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbItemMenuDatos = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        tbtnPlatos = new javax.swing.JToggleButton();
        tbtnBebidas = new javax.swing.JToggleButton();
        btnCargarDatos = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        btnVolver = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnVerDetalles = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtpTitulo = new javax.swing.JTextPane();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(
                javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "PRODUCTOS",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPaneCRUD.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPaneCRUDStateChanged(evt);
            }
        });
        jTabbedPaneCRUD.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTabbedPaneCRUDPropertyChange(evt);
            }
        });

        jPanelAgregar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGuardar.setText("Guardar");
        btnGuardar.setPreferredSize(new java.awt.Dimension(61, 24));
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanelAgregar.add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 320, 80, -1));

        txtNombreAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreAgregar.setFocusCycleRoot(true);
        txtNombreAgregar.setName(""); // NOI18N

        txtPrecioAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtPrecioAgregar.setBorder(javax.swing.BorderFactory.createTitledBorder("Precio"));
        txtPrecioAgregar.setFocusCycleRoot(true);
        txtPrecioAgregar.setName(""); // NOI18N

        btnLimpiarAgregar.setText("Limpiar");
        btnLimpiarAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addComponent(txtNombreAgregar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38,
                                                        Short.MAX_VALUE)
                                                .addComponent(txtPrecioAgregar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                jPanel7Layout.createSequentialGroup()
                                                        .addGap(0, 0, Short.MAX_VALUE)
                                                        .addComponent(btnLimpiarAgregar)))
                                .addContainerGap()));
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnLimpiarAgregar)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtPrecioAgregar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNombreAgregar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        txtPrecioAgregar.getAccessibleContext().setAccessibleName("Peso\n");

        jPanelAgregar.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 90));

        jPanel8.setLayout(null);

        txtPeVoAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtPeVoAgregar.setBorder(
                javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Peso"));
        txtPeVoAgregar.setFocusCycleRoot(true);
        txtPeVoAgregar.setName(""); // NOI18N

        jPanel8.add(txtPeVoAgregar);
        txtPeVoAgregar.setBounds(174, 10, 130, 37);

        txtCaTmAgregar.setForeground(new java.awt.Color(51, 51, 51));
        txtCaTmAgregar.setBorder(javax.swing.BorderFactory
                .createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Calorias"));
        txtCaTmAgregar.setFocusCycleRoot(true);
        txtCaTmAgregar.setName(""); // NOI18N
        txtCaTmAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaTmAgregarActionPerformed(evt);
            }
        });
        jPanel8.add(txtCaTmAgregar);
        txtCaTmAgregar.setBounds(6, 10, 130, 37);

        buttonGroupAptoCeliaco.add(jRadioButtonNO);
        jRadioButtonNO.setText("NO");
        jPanel8.add(jRadioButtonNO);
        jRadioButtonNO.setBounds(61, 76, 50, 28);

        buttonGroupAptoCeliaco.add(jRadioButtonSI);
        jRadioButtonSI.setText("SI");
        jPanel8.add(jRadioButtonSI);
        jRadioButtonSI.setBounds(12, 76, 43, 28);

        jLabelAcGa.setText("AptoCelíaco");
        jLabelAcGa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel8.add(jLabelAcGa);
        jLabelAcGa.setBounds(7, 54, 120, 16);

        jLabel2.setText("Categoria:");
        jPanel8.add(jLabel2);
        jLabel2.setBounds(170, 54, 60, 16);
        jPanel8.add(jSpinnerGraduacionAlcoholicaAgregar);
        jSpinnerGraduacionAlcoholicaAgregar.setBounds(40, 80, 38, 26);

        jPanel8.add(jComboBoxCategoria);
        jComboBoxCategoria.setBounds(170, 77, 130, 26);

        jPanelAgregar.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 310, 110));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripción"));

        jTextAreaAgregar.setColumns(20);
        jTextAreaAgregar.setRows(5);
        jScrollPane3.setViewportView(jTextAreaAgregar);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel9Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                .addContainerGap()));
        jPanel9Layout.setVerticalGroup(
                jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));

        jPanelAgregar.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 310, 110));

        jTabbedPaneCRUD.addTab("Agregar", jPanelAgregar);

        jPanelModificar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanelModificarPropertyChange(evt);
            }
        });
        jPanelModificar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanelModificar.add(btnModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 320, 80, -1));

        txtNombreModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreModificar.setFocusCycleRoot(true);
        txtNombreModificar.setName(""); // NOI18N
        txtNombreModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreModificarActionPerformed(evt);
            }
        });

        txtPrecioModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtPrecioModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("Precio"));
        txtPrecioModificar.setFocusCycleRoot(true);
        txtPrecioModificar.setName(""); // NOI18N

        txtIDModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtIDModificar.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));
        txtIDModificar.setFocusCycleRoot(true);
        txtIDModificar.setName(""); // NOI18N
        txtIDModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDModificarActionPerformed(evt);
            }
        });

        btnLimpiarModificar.setText("Limpiar");
        btnLimpiarModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout
                                                .createSequentialGroup()
                                                .addComponent(txtIDModificar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnLimpiarModificar))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout
                                                .createSequentialGroup()
                                                .addComponent(txtNombreModificar,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 130,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38,
                                                        Short.MAX_VALUE)
                                                .addComponent(txtPrecioModificar,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 130,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap()));
        jPanel10Layout.setVerticalGroup(
                jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtIDModificar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel10Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(btnLimpiarModificar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPrecioModificar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNombreModificar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        jPanelModificar.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 90));

        jPanel11.setLayout(null);

        txtPeVoModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtPeVoModificar.setBorder(
                javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Peso"));
        txtPeVoModificar.setFocusCycleRoot(true);
        txtPeVoModificar.setName(""); // NOI18N
        txtPeVoModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPeVoModificarActionPerformed(evt);
            }
        });
        jPanel11.add(txtPeVoModificar);
        txtPeVoModificar.setBounds(174, 10, 130, 37);

        txtCaTmModificar.setForeground(new java.awt.Color(51, 51, 51));
        txtCaTmModificar.setBorder(javax.swing.BorderFactory
                .createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Calorias"));
        txtCaTmModificar.setFocusCycleRoot(true);
        txtCaTmModificar.setName(""); // NOI18N
        txtCaTmModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaTmModificarActionPerformed(evt);
            }
        });
        jPanel11.add(txtCaTmModificar);
        txtCaTmModificar.setBounds(6, 10, 130, 37);

        buttonGroupAptoCeliaco.add(jRadioButtonNOModificar);
        jRadioButtonNOModificar.setText("NO");
        jPanel11.add(jRadioButtonNOModificar);
        jRadioButtonNOModificar.setBounds(61, 76, 50, 28);

        buttonGroupAptoCeliaco.add(jRadioButtonSIModificar);
        jRadioButtonSIModificar.setText("SI");
        jPanel11.add(jRadioButtonSIModificar);
        jRadioButtonSIModificar.setBounds(12, 76, 43, 28);

        jLabelAcGaModificar.setText("AptoCelíaco");
        jLabelAcGaModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel11.add(jLabelAcGaModificar);
        jLabelAcGaModificar.setBounds(7, 54, 120, 16);

        jLabel3.setText("Categoria:");
        jPanel11.add(jLabel3);
        jLabel3.setBounds(170, 54, 60, 16);
        jPanel11.add(jSpinnerGraduacionAlcoholicaModificar);
        jSpinnerGraduacionAlcoholicaModificar.setBounds(40, 80, 38, 26);

        jPanel11.add(jComboBoxCategoriaModificar);
        jComboBoxCategoriaModificar.setBounds(170, 77, 130, 26);

        jPanelModificar.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 310, 110));

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripción"));

        jTextAreaModificar.setColumns(20);
        jTextAreaModificar.setRows(5);
        jScrollPane4.setViewportView(jTextAreaModificar);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
                jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                .addContainerGap()));
        jPanel12Layout.setVerticalGroup(
                jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));

        jPanelModificar.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 310, 110));

        jTabbedPaneCRUD.addTab("Modificar", jPanelModificar);

        jPanelEliminar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanelEliminarFocusGained(evt);
            }
        });
        jPanelEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanelEliminarMouseClicked(evt);
            }
        });
        jPanelEliminar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanelEliminarPropertyChange(evt);
            }
        });
        jPanelEliminar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnEliminar.setText("Eliminar");
        btnEliminar.setPreferredSize(new java.awt.Dimension(61, 24));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanelEliminar.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 320, 80, -1));

        txtNombreEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreEliminar.setFocusCycleRoot(true);
        txtNombreEliminar.setName(""); // NOI18N
        txtNombreEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreEliminarActionPerformed(evt);
            }
        });

        txtPrecioEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtPrecioEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("Precio"));
        txtPrecioEliminar.setFocusCycleRoot(true);
        txtPrecioEliminar.setName(""); // NOI18N

        txtIDEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtIDEliminar.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));
        txtIDEliminar.setFocusCycleRoot(true);
        txtIDEliminar.setName(""); // NOI18N
        txtIDEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDEliminarActionPerformed(evt);
            }
        });

        btnLimpiarEliminar.setText("Limpiar");
        btnLimpiarEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
                jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel13Layout.createSequentialGroup()
                                                .addComponent(txtIDEliminar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnLimpiarEliminar))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout
                                                .createSequentialGroup()
                                                .addComponent(txtNombreEliminar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38,
                                                        Short.MAX_VALUE)
                                                .addComponent(txtPrecioEliminar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap()));
        jPanel13Layout.setVerticalGroup(
                jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtIDEliminar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel13Layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(btnLimpiarEliminar)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPrecioEliminar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtNombreEliminar, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        jPanelEliminar.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 310, 90));

        jPanel14.setLayout(null);

        txtPeVoEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtPeVoEliminar.setBorder(
                javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Peso"));
        txtPeVoEliminar.setFocusCycleRoot(true);
        txtPeVoEliminar.setName(""); // NOI18N
        txtPeVoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPeVoEliminarActionPerformed(evt);
            }
        });
        jPanel14.add(txtPeVoEliminar);
        txtPeVoEliminar.setBounds(174, 10, 130, 37);

        txtCaTmEliminar.setForeground(new java.awt.Color(51, 51, 51));
        txtCaTmEliminar.setBorder(javax.swing.BorderFactory
                .createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Calorias"));
        txtCaTmEliminar.setFocusCycleRoot(true);
        txtCaTmEliminar.setName(""); // NOI18N
        txtCaTmEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCaTmEliminarActionPerformed(evt);
            }
        });
        jPanel14.add(txtCaTmEliminar);
        txtCaTmEliminar.setBounds(6, 10, 130, 37);

        buttonGroupAptoCeliaco.add(jRadioButtonNOEliminar);
        jRadioButtonNOEliminar.setText("NO");
        jPanel14.add(jRadioButtonNOEliminar);
        jRadioButtonNOEliminar.setBounds(61, 76, 50, 28);

        buttonGroupAptoCeliaco.add(jRadioButtonSIEliminar);
        jRadioButtonSIEliminar.setText("SI");
        jPanel14.add(jRadioButtonSIEliminar);
        jRadioButtonSIEliminar.setBounds(12, 76, 43, 28);

        jLabelAcGaEliminar.setText("AptoCelíaco");
        jLabelAcGaEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel14.add(jLabelAcGaEliminar);
        jLabelAcGaEliminar.setBounds(7, 54, 120, 16);

        jLabel4.setText("Categoria:");
        jPanel14.add(jLabel4);
        jLabel4.setBounds(170, 54, 60, 16);
        jPanel14.add(jSpinnerGraduacionAlcoholicaEliminar);
        jSpinnerGraduacionAlcoholicaEliminar.setBounds(40, 80, 38, 26);

        jPanel14.add(jComboBoxCategoriaEliminar);
        jComboBoxCategoriaEliminar.setBounds(170, 77, 130, 26);

        jPanelEliminar.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 310, 110));

        jScrollPane5.setBorder(javax.swing.BorderFactory.createTitledBorder("Descripción"));

        jTextAreaEliminar.setColumns(20);
        jTextAreaEliminar.setRows(5);
        jScrollPane5.setViewportView(jTextAreaEliminar);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
                jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel15Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                                .addContainerGap()));
        jPanel15Layout.setVerticalGroup(
                jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 97,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));

        jPanelEliminar.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 310, 110));

        jTabbedPaneCRUD.addTab("Eliminar", jPanelEliminar);

        jPanelBuscar.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jPanelBuscarPropertyChange(evt);
            }
        });
        jPanelBuscar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnLimpiarBuscar.setText("Limpiar");
        btnLimpiarBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarBuscarActionPerformed(evt);
            }
        });
        jPanelBuscar.add(btnLimpiarBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        txtIdBuscar.setForeground(new java.awt.Color(51, 51, 51));
        txtIdBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("ID"));
        txtIdBuscar.setFocusCycleRoot(true);
        txtIdBuscar.setName(""); // NOI18N
        txtIdBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdBuscarActionPerformed(evt);
            }
        });
        txtIdBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdBuscarKeyReleased(evt);
            }
        });
        jPanelBuscar.add(txtIdBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 220, -1));

        txtNombreBuscar.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreBuscar.setBorder(javax.swing.BorderFactory.createTitledBorder("Nombre"));
        txtNombreBuscar.setFocusCycleRoot(true);
        txtNombreBuscar.setName(""); // NOI18N
        txtNombreBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreBuscarActionPerformed(evt);
            }
        });
        txtNombreBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreBuscarKeyReleased(evt);
            }
        });
        jPanelBuscar.add(txtNombreBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 220, -1));

        jTabbedPaneCRUD.addTab("Buscar", jPanelBuscar);

        jPanel2.add(jTabbedPaneCRUD, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 330, 390));

        jPanelTable.setBackground(new java.awt.Color(204, 204, 204));
        jPanelTable.setBorder(javax.swing.BorderFactory.createTitledBorder(
                javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Platos",
                javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP));
        jPanelTable.setLayout(new java.awt.BorderLayout());

        tbItemMenuDatos.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {
                        {},
                        {},
                        {},
                        {}
                },
                new String[] {

                }));
        tbItemMenuDatos.setRowHeight(25);
        tbItemMenuDatos.setShowGrid(true);
        tbItemMenuDatos.getTableHeader().setResizingAllowed(false);
        tbItemMenuDatos.getTableHeader().setReorderingAllowed(false);

        jScrollPane1.setViewportView(tbItemMenuDatos);

        jPanelTable.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanelTable, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 580, 250));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));

        btngPlatosBebidas.add(tbtnPlatos);
        tbtnPlatos.setText("Platos");
        tbtnPlatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnPlatosActionPerformed(evt);
            }
        });

        btngPlatosBebidas.add(tbtnBebidas);
        tbtnBebidas.setText("Bebidas");
        tbtnBebidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtnBebidasActionPerformed(evt);
            }
        });

        btnCargarDatos.setText("CargarDatos");
        btnCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(406, Short.MAX_VALUE)
                                .addComponent(tbtnPlatos, javax.swing.GroupLayout.PREFERRED_SIZE, 75,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(tbtnBebidas, javax.swing.GroupLayout.PREFERRED_SIZE, 75,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 4, Short.MAX_VALUE)
                                        .addComponent(btnCargarDatos)
                                        .addGap(0, 493, Short.MAX_VALUE))));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(10, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(tbtnBebidas)
                                        .addComponent(tbtnPlatos))
                                .addContainerGap())
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 8, Short.MAX_VALUE)
                                        .addComponent(btnCargarDatos)
                                        .addGap(0, 8, Short.MAX_VALUE))));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, 580, 40));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 85,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 835, Short.MAX_VALUE)));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnVolver)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 920, -1));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));

        btnVerDetalles.setText("Detalles");
        btnVerDetalles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerDetallesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                                .addContainerGap(516, Short.MAX_VALUE)
                                .addComponent(btnVerDetalles)
                                .addContainerGap()));
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnVerDetalles)
                                .addContainerGap(10, Short.MAX_VALUE)));

        jPanel2.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, 580, 40));

        jPanel1.add(jPanel2, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));
        jPanel6.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanel6.setPreferredSize(new java.awt.Dimension(963, 40));

        jScrollPane2.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane2.setBorder(null);

        txtpTitulo.setEditable(false);
        txtpTitulo.setBackground(new java.awt.Color(204, 204, 204));
        txtpTitulo.setForeground(new java.awt.Color(204, 204, 204));
        txtpTitulo.setCaretColor(new java.awt.Color(204, 204, 204));
        txtpTitulo.setSelectedTextColor(new java.awt.Color(204, 204, 204));
        txtpTitulo.setSelectionColor(new java.awt.Color(204, 204, 204));
        jScrollPane2.setViewportView(txtpTitulo);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 951, Short.MAX_VALUE)
                                .addContainerGap()));
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addContainerGap(12, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap()));

        add(jPanel6, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPaneCRUDPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_jTabbedPaneCRUDPropertyChange
        // TODO add your handling code here:
    }// GEN-LAST:event_jTabbedPaneCRUDPropertyChange

    private void btnLimpiarEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarEliminarActionPerformed
        vaciarFormEliminar();
    }// GEN-LAST:event_btnLimpiarEliminarActionPerformed

    private void vaciarFormEliminar() {
        txtIDEliminar.setText("");
        txtNombreEliminar.setText("");
        txtPrecioEliminar.setText("");
        txtCaTmEliminar.setText("");
        txtPeVoEliminar.setText("");
        jTextAreaEliminar.setText("");
        buttonGroupAptoCeliaco.clearSelection();
        jSpinnerGraduacionAlcoholicaEliminar.setValue(0);
    }

    private void btnLimpiarAgregarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarAgregarActionPerformed
        vaciarFormAgregar();
    }// GEN-LAST:event_btnLimpiarAgregarActionPerformed

    private void vaciarFormAgregar() {
        txtNombreAgregar.setText("");
        txtPrecioAgregar.setText("");
        txtCaTmAgregar.setText("");
        txtPeVoAgregar.setText("");
        jTextAreaAgregar.setText("");
        buttonGroupAptoCeliaco.clearSelection();
        jSpinnerGraduacionAlcoholicaAgregar.setValue(0);
    }

    private void btnLimpiarModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarModificarActionPerformed
        vaciarFormModificar();
    }// GEN-LAST:event_btnLimpiarModificarActionPerformed

    private void vaciarFormModificar() {
        txtIDModificar.setText("");
        txtNombreModificar.setText("");
        txtPrecioModificar.setText("");
        txtCaTmModificar.setText("");
        txtPeVoModificar.setText("");
        jTextAreaModificar.setText("");
        buttonGroupAptoCeliaco.clearSelection();
        jSpinnerGraduacionAlcoholicaModificar.setValue(0);
    }

    private void jTabbedPaneCRUDStateChanged(javax.swing.event.ChangeEvent evt) {// GEN-FIRST:event_jTabbedPaneCRUDStateChanged
        vaciarFormAgregar();
        vaciarFormEliminar();
        vaciarFormModificar();
        vaciarFormBuscar();
    }// GEN-LAST:event_jTabbedPaneCRUDStateChanged

    private void txtNombreModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtNombreModificarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtNombreModificarActionPerformed

    private void txtPeVoModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtPeVoModificarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtPeVoModificarActionPerformed

    private void txtCaTmModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCaTmModificarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCaTmModificarActionPerformed

    private void txtNombreEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtNombreEliminarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtNombreEliminarActionPerformed

    private void txtPeVoEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtPeVoEliminarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtPeVoEliminarActionPerformed

    private void txtCaTmEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCaTmEliminarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCaTmEliminarActionPerformed

    private void txtIDModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtIDModificarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtIDModificarActionPerformed

    private void txtIDEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtIDEliminarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtIDEliminarActionPerformed

    private void txtCaTmAgregarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtCaTmAgregarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtCaTmAgregarActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnVolverActionPerformed
        parentFrame.setContentPane(parentFrame.getjPanel1()); // Cambiamos el contenido a jTabbedPane
        parentFrame.revalidate();
        parentFrame.repaint();
    }// GEN-LAST:event_btnVolverActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnGuardarActionPerformed
        String nombre = txtNombreAgregar.getText();
        String precio = txtPrecioAgregar.getText();
        String caloriasTamano = txtCaTmAgregar.getText();
        String pesoVolumen = txtPeVoAgregar.getText();
        Boolean aptoCeliaco = jRadioButtonSI.isSelected();
        String categoria = (String) jComboBoxCategoria.getSelectedItem();
        String descripcion = jTextAreaAgregar.getText();
        String graduacionAlcoholica = jSpinnerGraduacionAlcoholicaAgregar.getValue().toString();

        Integer idVendedor = Integer.parseInt(vendedorDto.getIdText());
        switch (tipoCategoria) {
            case "Plato":
                Map<String, Boolean> aptitudes = setearAptoAlimentacion(categoria);
                boolean aptoVegano = aptitudes.get("aptoVegano");
                boolean aptoVegetariano = aptitudes.get("aptoVegetariano");

                PlatoDto platoDto = new PlatoDto(nombre, descripcion, precio, categoria, idVendedor,
                        caloriasTamano,
                        aptoCeliaco, aptoVegetariano, aptoVegano, pesoVolumen);
                itemMenuController.guardarItemMenu(platoDto, tipoCategoria);
                List<Plato> platos = itemMenuController.obtenerPlatoPorIdVendedor(vendedorDto);
                mostrarItemMenuEnPantalla(platos);
                break;
            case "Bebida":
                BebidaDto bebidaDto = new BebidaDto(nombre, descripcion, precio, categoria, idVendedor,
                        graduacionAlcoholica, caloriasTamano, pesoVolumen);
                itemMenuController.guardarItemMenu(bebidaDto, tipoCategoria);
                List<Bebida> bebidas = itemMenuController.obtenerBebidaPorIdVendedor(vendedorDto);
                mostrarItemMenuEnPantalla(bebidas);
                break;
        }
        vaciarFormAgregar();
    }// GEN-LAST:event_btnGuardarActionPerformed

    private Map<String, Boolean> setearAptoAlimentacion(String categoria) {
        Map<String, Boolean> aptitudes = new HashMap<>();

        switch (categoria.toLowerCase()) { // Manejo case insensitive
            case "comida vegana":
                aptitudes.put("aptoVegano", true);
                aptitudes.put("aptoVegetariano", true);
                break;
            case "comida vegetariana":
                aptitudes.put("aptoVegano", false);
                aptitudes.put("aptoVegetariano", true);
                break;
            default:
                aptitudes.put("aptoVegano", false);
                aptitudes.put("aptoVegetariano", false);
                break;
        }

        return aptitudes;
    }

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnModificarActionPerformed
        String id = txtIDModificar.getText();
        String nombre = txtNombreModificar.getText();
        String precio = txtPrecioModificar.getText();
        String caloriasTamano = txtCaTmModificar.getText();
        String pesoVolumen = txtPeVoModificar.getText();
        Boolean aptoCeliaco = jRadioButtonSIModificar.isSelected();
        String categoria = (String) jComboBoxCategoriaModificar.getSelectedItem();
        String descripcion = jTextAreaModificar.getText();
        String graduacionAlcoholica = jSpinnerGraduacionAlcoholicaModificar.getValue().toString();

        Vendedor vendedor = itemMenuController.obtenerVendedor(vendedorDto.getIdText());

        switch (tipoCategoria) {
            case "Plato":
                Map<String, Boolean> aptitudes = setearAptoAlimentacion(categoria);
                boolean aptoVegano = aptitudes.get("aptoVegano");
                boolean aptoVegetariano = aptitudes.get("aptoVegetariano");
                PlatoDto platoDto = new PlatoDto(id, nombre, descripcion, precio, categoria, vendedor, caloriasTamano,
                        aptoCeliaco, aptoVegetariano, aptoVegano, pesoVolumen);
                itemMenuController.modificarItemMenu(platoDto, tipoCategoria);
                List<Plato> platos = itemMenuController.obtenerPlatoPorIdVendedor(vendedorDto);
                mostrarItemMenuEnPantalla(platos);
                break;
            case "Bebida":

                BebidaDto bebidaDto = new BebidaDto(id, nombre, descripcion, precio, categoria, vendedor,
                        graduacionAlcoholica, caloriasTamano, pesoVolumen);
                itemMenuController.modificarItemMenu(bebidaDto, tipoCategoria);
                List<Bebida> bebidas = itemMenuController.obtenerBebidaPorIdVendedor(vendedorDto);
                mostrarItemMenuEnPantalla(bebidas);
                break;
        }
        vaciarFormModificar();
    }// GEN-LAST:event_btnModificarActionPerformed

    private void jPanelModificarPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_jPanelModificarPropertyChange
        txtIDModificar.setEnabled(false);
    }// GEN-LAST:event_jPanelModificarPropertyChange

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnEliminarActionPerformed
        String idText = txtIDEliminar.getText();
        itemMenuController.eliminarItemMenu(idText, tipoCategoria);
        switch (tipoCategoria) {
            case "Plato":
                List<Plato> platos = itemMenuController.obtenerPlatoPorIdVendedor(vendedorDto);
                if (platos == null || platos.isEmpty()) {
                    // Si la lista es null o vacía, pasamos una lista vacía
                    mostrarItemMenuEnPantalla(new ArrayList<>());
                } else {
                    // Si la lista no es null ni vacía, mostramos los platos
                    mostrarItemMenuEnPantalla(platos);
                }
                break;
            case "Bebida":
                List<Bebida> bebidas = itemMenuController.obtenerBebidaPorIdVendedor(vendedorDto);
                if (bebidas == null || bebidas.isEmpty()) {
                    // Si la lista es null o vacía, pasamos una lista vacía
                    mostrarItemMenuEnPantalla(new ArrayList<>());
                } else {
                    // Si la lista no es null ni vacía, mostramos los platos
                    mostrarItemMenuEnPantalla(bebidas);
                }
                break;
        }
        vaciarFormEliminar();
    }// GEN-LAST:event_btnEliminarActionPerformed

    private void jPanelEliminarFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jPanelEliminarFocusGained
        // TODO add your handling code here:
    }// GEN-LAST:event_jPanelEliminarFocusGained

    private void jPanelEliminarMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jPanelEliminarMouseClicked
        // TODO add your handling code here:
    }// GEN-LAST:event_jPanelEliminarMouseClicked

    private void jPanelEliminarPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_jPanelEliminarPropertyChange
        txtNombreEliminar.setEnabled(false);
        txtPrecioEliminar.setEnabled(false);
        txtCaTmEliminar.setEnabled(false);
        txtPeVoEliminar.setEnabled(false);
        txtCaTmEliminar.setEnabled(false);
        jRadioButtonSIEliminar.setEnabled(false);
        jComboBoxCategoriaEliminar.setEnabled(false);
        jTextAreaEliminar.setEnabled(false);
        jSpinnerGraduacionAlcoholicaEliminar.setEnabled(false);
    }// GEN-LAST:event_jPanelEliminarPropertyChange

    private void btnLimpiarBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnLimpiarBuscarActionPerformed
        vaciarFormBuscar();
    }// GEN-LAST:event_btnLimpiarBuscarActionPerformed

    private void vaciarFormBuscar() {
        txtNombreBuscar.setText("");
        txtNombreBuscar.setText("");
    }

    private void txtIdBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtIdBuscarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtIdBuscarActionPerformed

    private void txtIdBuscarKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtIdBuscarKeyReleased
        String idText = txtIdBuscar.getText().trim();
        List<ItemMenu> items = new ArrayList<>();
        switch (tipoCategoria) {
            case "Plato":
                if (!idText.isEmpty()) {
                    ItemMenu item = itemMenuController.obtenerItemPorId(idText);
                    items.add(item);
                    txtNombreBuscar.setEnabled(false);
                } else {
                    List<Plato> platos = itemMenuController.obtenerPlatoPorIdVendedor(vendedorDto);
                    items.addAll(platos);
                    txtNombreBuscar.setEnabled(true);
                }
                break;
            case "Bebida":
                if (!idText.isEmpty()) {
                    ItemMenu item = itemMenuController.obtenerItemPorId(idText);
                    items.add(item);
                    txtNombreBuscar.setEnabled(false);
                } else {
                    List<Bebida> bebidas = itemMenuController.obtenerBebidaPorIdVendedor(vendedorDto);
                    items.addAll(bebidas);
                    txtNombreBuscar.setEnabled(true);
                }
                break;
        }
        mostrarItemMenuEnPantalla(items);
    }// GEN-LAST:event_txtIdBuscarKeyReleased

    private void txtNombreBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtNombreBuscarActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtNombreBuscarActionPerformed

    private void txtNombreBuscarKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_txtNombreBuscarKeyReleased
        String nombre = txtNombreBuscar.getText().trim();
        List<ItemMenu> items = new ArrayList<>();
        switch (tipoCategoria) {
            case "Plato":
                if (!nombre.isEmpty()) {
                    items = itemMenuController.buscarItemPorNombre(nombre);
                } else {
                    List<Plato> platos = itemMenuController.obtenerPlatoPorIdVendedor(vendedorDto);
                    items.addAll(platos);
                }
                break;
            case "Bebida":
                if (!nombre.isEmpty()) {
                    items = itemMenuController.buscarItemPorNombre(nombre);
                } else {
                    List<Bebida> bebidas = itemMenuController.obtenerBebidaPorIdVendedor(vendedorDto);
                    items.addAll(bebidas);
                }
                break;
        }
        mostrarItemMenuEnPantalla(items);
    }// GEN-LAST:event_txtNombreBuscarKeyReleased

    private void jPanelBuscarPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_jPanelBuscarPropertyChange
        // TODO add your handling code here:
    }// GEN-LAST:event_jPanelBuscarPropertyChange

    private void btnVerDetallesActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnVerDetallesActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_btnVerDetallesActionPerformed

    private void btnCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCargarDatosActionPerformed
        int selectedRow = tbItemMenuDatos.getSelectedRow();

        // Verificar si hay una fila seleccionada
        if (selectedRow != -1) {
            String id = tbItemMenuDatos.getValueAt(selectedRow, 0).toString();
            ItemMenu selectedItem = itemMenuController.obtenerItemPorId(id);
            cargarDatos(selectedItem);
        }
    }// GEN-LAST:event_btnCargarDatosActionPerformed

    private void cargarDatos(ItemMenu item) {
        switch (item.getClass().getSimpleName()) {
            case "Plato":
                Plato plato = (Plato) item;
                if (jTabbedPaneCRUD.getSelectedIndex() == 1) { // Modificar
                    txtIDModificar.setText(plato.getId().toString());
                    txtNombreModificar.setText(plato.getNombre());
                    txtPrecioModificar.setText(plato.getPrecio().toString());
                    txtCaTmModificar.setText(plato.getCalorias().toString());
                    txtPeVoModificar.setText(plato.getPeso().toString());
                    jTextAreaModificar.setText(plato.getDescripcion());
                    jComboBoxCategoriaModificar.setSelectedItem(plato.getCategoria().getNombre());

                    Boolean aptoCeliaco = plato.getAptoCeliaco();
                    jRadioButtonSIModificar.setSelected(aptoCeliaco);
                    jRadioButtonNOModificar.setSelected(!aptoCeliaco);
                } else if (jTabbedPaneCRUD.getSelectedIndex() == 2) { // Eliminar
                    txtIDEliminar.setText(plato.getId().toString());
                    txtNombreEliminar.setText(plato.getNombre());
                    txtPrecioEliminar.setText(plato.getPrecio().toString());
                    txtCaTmEliminar.setText(plato.getCalorias().toString());
                    txtPeVoEliminar.setText(plato.getPeso().toString());
                    jTextAreaEliminar.setText(plato.getDescripcion());
                    jComboBoxCategoriaEliminar.setSelectedItem(plato.getCategoria().getNombre());

                    Boolean aptoCeliaco = plato.getAptoCeliaco();
                    jRadioButtonSIEliminar.setSelected(aptoCeliaco);
                    jRadioButtonNOEliminar.setSelected(!aptoCeliaco);
                } else {
                    MensajeAlerta.mostrarError("Solo puedes cargar datos en 'Modificar' o 'Eliminar'.",
                            "Error al cargar datos en Plato");
                }
                break;
            case "Bebida":
                Bebida bebida = (Bebida) item;
                if (jTabbedPaneCRUD.getSelectedIndex() == 1) { // Modificar
                    txtIDModificar.setText(bebida.getId().toString());
                    txtNombreModificar.setText(bebida.getNombre());
                    txtPrecioModificar.setText(bebida.getPrecio().toString());
                    txtCaTmModificar.setText(bebida.getTamano().toString());
                    txtPeVoModificar.setText(bebida.getVolumen().toString());
                    jTextAreaModificar.setText(bebida.getDescripcion());
                    jComboBoxCategoriaModificar.setSelectedItem(bebida.getCategoria().getNombre());

                    jSpinnerGraduacionAlcoholicaModificar.setValue(bebida.getGraduacionAlcoholica());
                } else if (jTabbedPaneCRUD.getSelectedIndex() == 2) { // Eliminar
                    txtIDEliminar.setText(bebida.getId().toString());
                    txtNombreEliminar.setText(bebida.getNombre());
                    txtPrecioEliminar.setText(bebida.getPrecio().toString());
                    txtCaTmEliminar.setText(bebida.getTamano().toString());
                    txtPeVoEliminar.setText(bebida.getVolumen().toString());
                    jTextAreaEliminar.setText(bebida.getDescripcion());
                    jComboBoxCategoriaEliminar.setSelectedItem(bebida.getCategoria().getNombre());

                    jSpinnerGraduacionAlcoholicaEliminar.setValue(bebida.getGraduacionAlcoholica());
                } else {
                    MensajeAlerta.mostrarError("Solo puedes cargar datos en 'Modificar' o 'Eliminar'.",
                            "Error al cargar datos en Bebida");
                }
                break;
        }
    }

    private void tbtnBebidasActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tbtnBebidasActionPerformed
        TitledBorder border = (TitledBorder) jPanelTable.getBorder();
        border.setTitle("BEBIDAS");
        tipoCategoria = "Bebida";

        List<String> categorias = itemMenuController.getValoresComboBoxCategoria(tipoCategoria);

        actualizarComboBox(jComboBoxCategoria, categorias);
        actualizarComboBox(jComboBoxCategoriaEliminar, categorias);
        actualizarComboBox(jComboBoxCategoriaModificar, categorias);

        String TAMANO = "Tamaño";
        actualizarTituloBorde(txtCaTmAgregar, TAMANO);
        actualizarTituloBorde(txtCaTmEliminar, TAMANO);
        actualizarTituloBorde(txtCaTmModificar, TAMANO);

        String VOLUMEN = "Volumen";
        actualizarTituloBorde(txtPeVoAgregar, VOLUMEN);
        actualizarTituloBorde(txtPeVoEliminar, VOLUMEN);
        actualizarTituloBorde(txtPeVoModificar, VOLUMEN);

        configurarGraduacionAlcoholicaSpinner(jRadioButtonSI, jRadioButtonNO, jLabelAcGa,
                jSpinnerGraduacionAlcoholicaAgregar);
        configurarGraduacionAlcoholicaSpinner(jRadioButtonSIEliminar, jRadioButtonNOEliminar, jLabelAcGaEliminar,
                jSpinnerGraduacionAlcoholicaEliminar);
        configurarGraduacionAlcoholicaSpinner(jRadioButtonSIModificar, jRadioButtonNOModificar, jLabelAcGaModificar,
                jSpinnerGraduacionAlcoholicaModificar);

        txtCaTmAgregar.repaint();
        txtPeVoAgregar.repaint();
        jPanelTable.repaint();

        // Actualizar tabla
        List<Bebida> bebidas = itemMenuController.obtenerBebidaPorIdVendedor(vendedorDto);
        mostrarItemMenuEnPantalla(bebidas);

    }// GEN-LAST:event_tbtnBebidasActionPerformed

    private void tbtnPlatosActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_tbtnPlatosActionPerformed
        TitledBorder border = (TitledBorder) jPanelTable.getBorder();
        border.setTitle("PLATOS");
        tipoCategoria = "Plato";

        List<String> categorias;
        try {
            categorias = itemMenuController.getValoresComboBoxCategoria(tipoCategoria);
            actualizarComboBox(jComboBoxCategoria, categorias);
            actualizarComboBox(jComboBoxCategoriaEliminar, categorias);
            actualizarComboBox(jComboBoxCategoriaModificar, categorias);

            String CALORIAS = "Calorias";
            actualizarTituloBorde(txtCaTmAgregar, CALORIAS);
            actualizarTituloBorde(txtCaTmEliminar, CALORIAS);
            actualizarTituloBorde(txtCaTmModificar, CALORIAS);

            String PESO = "Peso";
            actualizarTituloBorde(txtPeVoAgregar, PESO);
            actualizarTituloBorde(txtPeVoEliminar, PESO);
            actualizarTituloBorde(txtPeVoModificar, PESO);

            configurarAptoCeliacoButtonGroup(jRadioButtonSI, jRadioButtonNO, jLabelAcGa,
                    jSpinnerGraduacionAlcoholicaAgregar);
            configurarAptoCeliacoButtonGroup(jRadioButtonSIEliminar, jRadioButtonNOEliminar, jLabelAcGaEliminar,
                    jSpinnerGraduacionAlcoholicaEliminar);
            configurarAptoCeliacoButtonGroup(jRadioButtonSIModificar, jRadioButtonNOModificar, jLabelAcGaModificar,
                    jSpinnerGraduacionAlcoholicaModificar);

            jPanelTable.repaint();
            txtCaTmAgregar.repaint();
            txtPeVoAgregar.repaint();

            // Actualizar tabla
            List<Plato> platos = itemMenuController.obtenerPlatoPorIdVendedor(vendedorDto);
            mostrarItemMenuEnPantalla(platos);
        } catch (CategoriaNoEncontradaException e) {
            MensajeAlerta.mostrarError("Error: " + e.getMessage(), "Categoria no encontrada");
            e.printStackTrace();
        }

    }// GEN-LAST:event_tbtnPlatosActionPerformed

    private void actualizarComboBox(JComboBox<String> comboBox, List<String> valores) {
        comboBox.removeAllItems();
        for (String valor : valores) {
            comboBox.addItem(valor);
        }
    }

    private void actualizarTituloBorde(JTextField textField, String nuevoTitulo) {
        TitledBorder border = (TitledBorder) textField.getBorder();
        border.setTitle(nuevoTitulo);
        textField.repaint();
    }

    private void configurarGraduacionAlcoholicaSpinner(JRadioButton si, JRadioButton no, JLabel label,
            JSpinner spinner) {
        si.setVisible(false);
        no.setVisible(false);
        label.setText("Graduacion Alcoholica");
        spinner.setVisible(true);
    }

    private void configurarAptoCeliacoButtonGroup(JRadioButton si, JRadioButton no, JLabel label, JSpinner spinner) {
        si.setVisible(true);
        no.setVisible(true);
        label.setText("Apto Celíaco");
        spinner.setVisible(false);
    }

    public void mostrarItemMenuEnPantalla(List<? extends ItemMenu> listaItemMenu) {
        DefaultTableModel model;
        String[] titulo;

        String selectedItem;

        if (tbtnPlatos.isEnabled()) {
            selectedItem = "Plato";
        } else {
            selectedItem = "Bebida";
        }

        if ("Bebida".equals(selectedItem)) {
            titulo = new String[] { "ID", "NOMBRE", "VOLUMEN", "DESCRIPCION", "PRECIO" };
        } else {
            titulo = new String[] { "ID", "NOMBRE", "CALORÍAS", "DESCRIPCION", "PRECIO" };
        }

        model = new DefaultTableModel(null, titulo);

        if (listaItemMenu.isEmpty() || listaItemMenu.get(0) == null) {
            // Tabla vacía
            tbItemMenuDatos.setModel(model);
        } else {
            for (ItemMenu item : listaItemMenu) {
                Object[] fila = new Object[5]; // Número de columnas

                fila[0] = item.getId();
                fila[1] = item.getNombre();
                fila[3] = item.getDescripcion();
                fila[4] = item.getPrecio();

                if (item instanceof Bebida) {
                    fila[2] = ((Bebida) item).getVolumen();
                } else if (item instanceof Plato) {
                    fila[2] = ((Plato) item).getCalorias(); // Calorías en lugar de volumen
                }

                model.addRow(fila);
            }
            tbItemMenuDatos.setModel(model);
            // Personalizar el encabezado
            JTableHeader header = tbItemMenuDatos.getTableHeader();
            header.setDefaultRenderer(new HeaderFormatter());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargarDatos;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiarAgregar;
    private javax.swing.JButton btnLimpiarBuscar;
    private javax.swing.JButton btnLimpiarEliminar;
    private javax.swing.JButton btnLimpiarModificar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnVerDetalles;
    private javax.swing.JButton btnVolver;
    private javax.swing.ButtonGroup btngPlatosBebidas;
    private javax.swing.ButtonGroup buttonGroupAptoCeliaco;
    private javax.swing.JComboBox<String> jComboBoxCategoria;
    private javax.swing.JComboBox<String> jComboBoxCategoriaEliminar;
    private javax.swing.JComboBox<String> jComboBoxCategoriaModificar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAcGa;
    private javax.swing.JLabel jLabelAcGaEliminar;
    private javax.swing.JLabel jLabelAcGaModificar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelAgregar;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelEliminar;
    private javax.swing.JPanel jPanelModificar;
    private javax.swing.JPanel jPanelTable;
    private javax.swing.JRadioButton jRadioButtonNO;
    private javax.swing.JRadioButton jRadioButtonNOEliminar;
    private javax.swing.JRadioButton jRadioButtonNOModificar;
    private javax.swing.JRadioButton jRadioButtonSI;
    private javax.swing.JRadioButton jRadioButtonSIEliminar;
    private javax.swing.JRadioButton jRadioButtonSIModificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSpinner jSpinnerGraduacionAlcoholicaAgregar;
    private javax.swing.JSpinner jSpinnerGraduacionAlcoholicaEliminar;
    private javax.swing.JSpinner jSpinnerGraduacionAlcoholicaModificar;
    private javax.swing.JTabbedPane jTabbedPaneCRUD;
    private javax.swing.JTextArea jTextAreaAgregar;
    private javax.swing.JTextArea jTextAreaEliminar;
    private javax.swing.JTextArea jTextAreaModificar;
    private javax.swing.JTable tbItemMenuDatos;
    private javax.swing.JToggleButton tbtnBebidas;
    private javax.swing.JToggleButton tbtnPlatos;
    private javax.swing.JTextField txtCaTmAgregar;
    private javax.swing.JTextField txtCaTmEliminar;
    private javax.swing.JTextField txtCaTmModificar;
    private javax.swing.JTextField txtIDEliminar;
    private javax.swing.JTextField txtIDModificar;
    private javax.swing.JTextField txtIdBuscar;
    private javax.swing.JTextField txtNombreAgregar;
    private javax.swing.JTextField txtNombreBuscar;
    private javax.swing.JTextField txtNombreEliminar;
    private javax.swing.JTextField txtNombreModificar;
    private javax.swing.JTextField txtPeVoAgregar;
    private javax.swing.JTextField txtPeVoEliminar;
    private javax.swing.JTextField txtPeVoModificar;
    private javax.swing.JTextField txtPrecioAgregar;
    private javax.swing.JTextField txtPrecioEliminar;
    private javax.swing.JTextField txtPrecioModificar;
    private javax.swing.JTextPane txtpTitulo;
    // End of variables declaration//GEN-END:variables
}
